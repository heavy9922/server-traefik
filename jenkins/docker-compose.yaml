services: 
    jenkins: 
        user: root 
        image: jenkins/docker
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.jenkins.rule=Host(`jenkins-tmp.inlazetest.com.co`)"
          - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
          - "traefik.http.routers.jenkins.priority=100"
          - "traefik.http.routers.jenkins.entrypoints=web" 
          # - "traefik.http.routers.jenkins.tls.certresolver=myresolver"
          # Router para HTTP con redireccionamiento a HTTPS
          # - "traefik.http.routers.jenkins-redirect.rule=Host(`jenkins-tmp.inlazetest.com`)"
          # - "traefik.http.routers.jenkins-redirect.entrypoints=web"
          # - "traefik.http.routers.jenkins-redirect.middlewares=redirect-to-https"
          # Middleware para redireccionar a HTTPS
          # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        build: 
          context: . 
        container_name: jenkins
        privileged: true 
        volumes: 
          - $PWD/jenkins_home:/var/jenkins_home 
          - /var/run/docker.sock:/var/run/docker.sock 
        networks: 
            traefik_network:
        restart: unless-stopped
    # sonarqube:
    #   image: sonarqube:developer
    #   labels:
    #     - "traefik.enable=true"
    #     - "traefik.http.routers.sonarqube.rule=Host(`sonar.inlazetest.com`)"
    #     - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
    #     - "traefik.http.routers.sonarqube.entrypoints=websecure" 
    #     - "traefik.http.routers.sonarqube.tls.certresolver=myresolver"
    #     # Router para HTTP con redireccionamiento a HTTPS
    #     - "traefik.http.routers.sonarqube-redirect.rule=Host(`sonar.inlazetest.com`)"
    #     - "traefik.http.routers.sonarqube-redirect.entrypoints=web"
    #     - "traefik.http.routers.sonarqube-redirect.middlewares=redirect-to-https"
    #     # Middleware para redireccionar a HTTPS
    #     - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    #   platform: linux/amd64
    #   networks:
    #     - traefik_network
    #   environment:
    #     SONARQUBE_JDBC_USERNAME: sonar
    #     SONARQUBE_JDBC_PASSWORD: sonarpasswd
    #     SONARQUBE_JDBC_URL: "jdbc:postgresql://monitory-security.cnuywm66wn75.us-east-1.rds.amazonaws.com:5432/sonar"

# networks: 
#     net: 

networks: 
  traefik_network:  
    name: inlaze 
    driver: bridge
    external: true